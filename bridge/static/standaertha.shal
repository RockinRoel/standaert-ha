{
  outputs: {
    licht_trap: {
      pin: 22
      name: Trap
    }
  }
}
---
// Input groups:
//  - 24, 25 and 30
//  - 26 and 28
//  - 6 and 15
//  - 11, 13 and 16

// Output groups:
//  - 28 and 29
//  - 5 and 25

// Unused inputs: 10
// Unused outputs: 1, 9, 21

on fedge input 0 toggle output 4;
on fedge input 1 toggle output 3;
on fedge input 2 toggle output 24;
on fedge input 3 toggle output 2;
on fedge input 4 toggle output 0;
on fedge input 5 toggle output 17;
on fedge input 7 toggle output 13;
on fedge input 8 toggle output 16;
on fedge input 9 toggle output 6;
on fedge input 12 toggle output 7;
on fedge input 14 toggle output 31;
on fedge input 17 {
  toggle output 28;
  toggle output 29;
}
on fedge input 18 toggle output 26;
on fedge input 19 toggle output 11;
on fedge input 20 toggle output 30;
on fedge input 21 toggle output 8;
on fedge input 22 toggle output 18;
on fedge input 23 toggle output 14;
on fedge input 24 toggle output 15;
on fedge input 25 toggle output 15;
on fedge input 26 toggle output 12;
on fedge input 27 toggle output 27;
on fedge input 28 toggle output 12;
on fedge input 29 toggle output 10;
on fedge input 30 toggle output 15;
on fedge input 31 toggle output 23;

// Hal, overloop en trap
on fedge input 6 toggle output 20;
on fedge input 15 toggle output 20;
on fedge input 11 {
  toggle output 5;
  toggle output 25;
}
on fedge input 13 {
  toggle output 5;
  toggle output 25;
}
on fedge input 16 {
  toggle output 5;
  toggle output 25;
}
if output 20 is high or output 5 is high {
  set licht_trap high;
} else {
  set licht_trap low;
}